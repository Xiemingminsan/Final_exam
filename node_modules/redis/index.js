class RedisClient {
  constructor() {
    this.store = new Map()
  }
  async connect() {}
  async quit() {
    this.store.clear()
  }
  async get(key) {
    const entry = this.store.get(key)
    if (!entry) return null
    const { value, expiresAt } = entry
    if (expiresAt && Date.now() > expiresAt) {
      this.store.delete(key)
      return null
    }
    return value
  }
  async set(key, value, options = {}) {
    let expiresAt = null
    if (options.EX) expiresAt = Date.now() + options.EX * 1000
    if (Array.isArray(options) && options.length >= 2 && options[0] === 'EX') expiresAt = Date.now() + options[1] * 1000
    this.store.set(key, { value, expiresAt })
  }
  async del(key) {
    this.store.delete(key)
  }
}

function createClient() {
  return new RedisClient()
}

module.exports = { createClient }
